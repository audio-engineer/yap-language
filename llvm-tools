#!/usr/bin/env sh

set -eu

if [ -f .env ]; then
  export "$(grep -v '^#' .env)"
fi

if command -v clang-20 >/dev/null 2>&1; then
  clang_tidy=clang-tidy-20
  clang_format=clang-format-20
  llvm_profdata=llvm-profdata-20
  llvm_cov=llvm-cov-20
elif command -v clang-19 >/dev/null 2>&1; then
  clang_tidy=clang-tidy-19
  clang_format=clang-format-19
  llvm_profdata=llvm-profdata-19
  llvm_cov=llvm-cov-19
else
  if [ -z "$LLVM_BIN_PATH" ]; then
    echo "Clang not found in PATH, and no LLVM_BIN_PATH in .env"

    exit 1
  fi

  clang_tidy=$LLVM_BIN_PATH/clang-tidy
  clang_format=$LLVM_BIN_PATH/clang-format
  llvm_profdata=$LLVM_BIN_PATH/llvm-profdata
  llvm_cov=$LLVM_BIN_PATH/llvm-cov
fi

src_files=$(ls src/*.[ch] 2>/dev/null || true)
tests_files=$(ls tests/*.[ch] 2>/dev/null || true)
build_native_debug_dir=build-native-debug

run_clang_tidy() {
  if [ ! -d $build_native_debug_dir ]; then
    echo "The 'yap-lang-native' target with build type Debug has not been built yet."
    echo "Build the target using CMake."

    exit 1
  fi

  # shellcheck disable=SC2086
  $clang_tidy --config-file .clang-tidy --extra-arg=-std=c99 --extra-arg=-D__CC65__ --extra-arg=-DNNEAR $src_files
  # shellcheck disable=SC2086
  $clang_tidy --config-file .clang-tidy -p $build_native_debug_dir $src_files $tests_files
}

run_clang_format() {
  # shellcheck disable=SC2086
  $clang_format --verbose -i $src_files $tests_files
}

run_tests() {
  if [ ! -f $build_native_debug_dir/yap-lang-native-tests ]; then
    echo "The 'yap-lang-native-tests' target with build type Debug has not been built yet."
    echo "Build the target using CMake."

    exit 1
  fi

  ctest --test-dir $build_native_debug_dir
  $llvm_profdata merge -sparse $build_native_debug_dir/default.profraw -o $build_native_debug_dir/default.profdata
  $llvm_cov report \
    $build_native_debug_dir/yap-lang-native-tests \
    -instr-profile=$build_native_debug_dir/default.profdata \
    --ignore-filename-regex='(unity|unity_internals)'
  $llvm_cov show \
    $build_native_debug_dir/yap-lang-native-tests \
    -instr-profile=$build_native_debug_dir/default.profdata \
    --ignore-filename-regex='(unity|unity_internals)' \
    -format=html \
    >$build_native_debug_dir/coverage.html
}

case "$1" in
lint)
  run_clang_tidy
  ;;
format)
  run_clang_format
  ;;
test)
  run_tests
  ;;
*)
  printf "Usage:\n%s [lint|format|test]\n" "$0"

  exit 1
  ;;
esac
