name: Lint and Compile
on: pull_request
env:
  C128_BUILD_DIR: build-c128-release
  NATIVE_DEBUG_BUILD_DIR: build-native-debug
jobs:
  lint-and-compile:
    name: Lint and Compile
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run: |
          # Add cc65 APT Repository
          wget -qO- https://download.opensuse.org/repositories/home:/strik/xUbuntu_23.04/Release.key | \
          gpg --dearmor | \
          sudo tee /etc/apt/trusted.gpg.d/home_strik.gpg >/dev/null
          sudo apt-add-repository -y 'deb https://download.opensuse.org/repositories/home:/strik/xUbuntu_23.04/ /'

          # Add LLVM/Clang APT Repository
          wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | \
          sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc >/dev/null
          sudo add-apt-repository -y 'deb https://apt.llvm.org/noble/ llvm-toolchain-noble-20 main'

          # Update and Install
          sudo apt-get update
          sudo apt-get install -y ninja-build cc65 clang-20 lld-20 clang-tidy-20 cppcheck
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run ClangFormat
        uses: DoozyX/clang-format-lint-action@v0.18.2
        with:
          source: src tests
      - name: CMake Configure and Build
        run: |
          cmake -DCMAKE_C_COMPILER=clang-20 --preset native-debug
          cmake --build $NATIVE_DEBUG_BUILD_DIR
      - name: Make Build
        run: |
          make CC65_LIB_PATH=/usr/share/cc65/lib BUILD_TYPE=Release
      - name: Run ClangTidy
        run: |
          make lint
      - name: Generate Coverage Report
        run: |
          make test
      - name: Set Environment Variables
        run: |
          echo "ID=$GITHUB_HEAD_REF-$(git rev-parse --short $GITHUB_SHA)" >> "$GITHUB_ENV"
      - name: Rename Files
        run: |
          sudo mv $C128_BUILD_DIR/yap-lang.prg $C128_BUILD_DIR/yap-lang-$ID.prg
          sudo mv $NATIVE_DEBUG_BUILD_DIR/yap-lang-native $NATIVE_DEBUG_BUILD_DIR/yap-lang-native-$ID
      - name: Upload Executables
        uses: actions/upload-artifact@v4
        with:
          name: yap-lang-${{ env.ID }}
          path: |
            ${{ env.C128_BUILD_DIR }}/yap-lang-${{ env.ID }}.prg
            ${{ env.NATIVE_DEBUG_BUILD_DIR }}/yap-lang-native-${{ env.ID }}
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ env.ID }}
          path: ${{ env.NATIVE_DEBUG_BUILD_DIR }}/coverage/**
